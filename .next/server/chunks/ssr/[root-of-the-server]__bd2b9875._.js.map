{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/constants.ts"],"sourcesContent":["// Konstanta warna tema\nexport const COLORS = {\n  primary: '#4169E1', // Royal Blue\n  secondary: '#ffffff',\n  accent: '#f8fafc',\n  text: '#1e293b',\n  success: '#10b981',\n  warning: '#f59e0b',\n  danger: '#ef4444',\n} as const;\n\n// Konstanta role dan permissions\nexport const PERMISSIONS = {\n  'super-admin': {\n    canControlDevices: true,\n    canViewSettings: true,\n    canEditSettings: true,\n    canViewTemperature: true,\n  },\n  'admin': {\n    canControlDevices: true,\n    canViewSettings: false,\n    canEditSettings: false,\n    canViewTemperature: true,\n  },\n  'user': {\n    canControlDevices: false,\n    canViewSettings: false,\n    canEditSettings: false,\n    canViewTemperature: true,\n  },\n} as const;\n\n// Data pengguna demo\nexport const DEMO_USERS = [\n  {\n    id: '1',\n    name: 'Super Admin',\n    role: 'super-admin' as const,\n    email: 'superadmin@dinaspendidikan.go.id',\n    password: 'admin123',\n  },\n  {\n    id: '2',\n    name: 'Admin Kantor',\n    role: 'admin' as const,\n    email: 'admin@dinaspendidikan.go.id',\n    password: 'admin123',\n  },\n  {\n    id: '3',\n    name: 'Pegawai',\n    role: 'user' as const,\n    email: 'user@dinaspendidikan.go.id',\n    password: 'user123',\n  },\n];\n\n// Pengaturan default sistem\nexport const DEFAULT_SETTINGS = {\n  autoOffDelay: 30, // 30 menit\n  motionSensorEnabled: true,\n  temperatureSettings: {\n    targetTemperature: 24,\n    autoMode: true,\n    temperatureMapping: [\n      { environmentTemp: 30, acTemp: 22 },\n      { environmentTemp: 28, acTemp: 24 },\n      { environmentTemp: 26, acTemp: 26 },\n    ],\n  },\n};\n"],"names":[],"mappings":"AAAA,uBAAuB;;;;;;;AAChB,MAAM,SAAS;IACpB,SAAS;IACT,WAAW;IACX,QAAQ;IACR,MAAM;IACN,SAAS;IACT,SAAS;IACT,QAAQ;AACV;AAGO,MAAM,cAAc;IACzB,eAAe;QACb,mBAAmB;QACnB,iBAAiB;QACjB,iBAAiB;QACjB,oBAAoB;IACtB;IACA,SAAS;QACP,mBAAmB;QACnB,iBAAiB;QACjB,iBAAiB;QACjB,oBAAoB;IACtB;IACA,QAAQ;QACN,mBAAmB;QACnB,iBAAiB;QACjB,iBAAiB;QACjB,oBAAoB;IACtB;AACF;AAGO,MAAM,aAAa;IACxB;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,UAAU;IACZ;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,UAAU;IACZ;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,UAAU;IACZ;CACD;AAGM,MAAM,mBAAmB;IAC9B,cAAc;IACd,qBAAqB;IACrB,qBAAqB;QACnB,mBAAmB;QACnB,UAAU;QACV,oBAAoB;YAClB;gBAAE,iBAAiB;gBAAI,QAAQ;YAAG;YAClC;gBAAE,iBAAiB;gBAAI,QAAQ;YAAG;YAClC;gBAAE,iBAAiB;gBAAI,QAAQ;YAAG;SACnC;IACH;AACF","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/contexts/AuthContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { User, UserRole } from '@/types';\nimport { DEMO_USERS } from '@/lib/constants';\n\ninterface AuthContextType {\n  user: User | null;\n  login: (email: string, password: string) => boolean;\n  logout: () => void;\n  isLoading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Cek apakah user sudah login saat aplikasi dimuat\n  useEffect(() => {\n    const savedUser = localStorage.getItem('ruang-cerdas-user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n    setIsLoading(false);\n  }, []);\n\n  const login = (email: string, password: string): boolean => {\n    const foundUser = DEMO_USERS.find(\n      u => u.email === email && u.password === password\n    );\n\n    if (foundUser) {\n      const userWithoutPassword = {\n        id: foundUser.id,\n        name: foundUser.name,\n        role: foundUser.role,\n        email: foundUser.email,\n      };\n      setUser(userWithoutPassword);\n      localStorage.setItem('ruang-cerdas-user', JSON.stringify(userWithoutPassword));\n      return true;\n    }\n    return false;\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('ruang-cerdas-user');\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout, isLoading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":";;;;;AAEA;AAEA;AAJA;;;;AAaA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,mDAAmD;IACnD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY,aAAa,OAAO,CAAC;QACvC,IAAI,WAAW;YACb,QAAQ,KAAK,KAAK,CAAC;QACrB;QACA,aAAa;IACf,GAAG,EAAE;IAEL,MAAM,QAAQ,CAAC,OAAe;QAC5B,MAAM,YAAY,uHAAA,CAAA,aAAU,CAAC,IAAI,CAC/B,CAAA,IAAK,EAAE,KAAK,KAAK,SAAS,EAAE,QAAQ,KAAK;QAG3C,IAAI,WAAW;YACb,MAAM,sBAAsB;gBAC1B,IAAI,UAAU,EAAE;gBAChB,MAAM,UAAU,IAAI;gBACpB,MAAM,UAAU,IAAI;gBACpB,OAAO,UAAU,KAAK;YACxB;YACA,QAAQ;YACR,aAAa,OAAO,CAAC,qBAAqB,KAAK,SAAS,CAAC;YACzD,OAAO;QACT;QACA,OAAO;IACT;IAEA,MAAM,SAAS;QACb,QAAQ;QACR,aAAa,UAAU,CAAC;IAC1B;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAO;YAAQ;QAAU;kBAC3D;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/deviceSimulator.ts"],"sourcesContent":["import { Device, SensorData } from '@/types';\n\n// Simulator untuk perangkat Bardi\nexport class DeviceSimulator {\n  private devices: Device[] = [\n    {\n      id: 'light-1',\n      name: 'Lampu Ruang Kepala',\n      type: 'light',\n      status: 'off',\n      room: 'Ruang Kepala Dinas',\n      lastUpdated: new Date(),\n    },\n    {\n      id: 'light-2',\n      name: 'Lampu Ruang Rapat',\n      type: 'light',\n      status: 'off',\n      room: 'Ruang Rapat',\n      lastUpdated: new Date(),\n    },\n    {\n      id: 'ac-1',\n      name: 'AC Ruang Kepala',\n      type: 'ac',\n      status: 'off',\n      room: 'Ruang Kepala Dinas',\n      lastUpdated: new Date(),\n    },\n    {\n      id: 'ac-2',\n      name: 'AC Ruang Rapat',\n      type: 'ac',\n      status: 'off',\n      room: 'Ruang Rapat',\n      lastUpdated: new Date(),\n    },\n  ];\n\n  private currentTemperature = 28; // Suhu awal\n  private motionDetected = false;\n\n  // Mendapatkan semua perangkat\n  getDevices(): Device[] {\n    return [...this.devices];\n  }\n\n  // Mengontrol perangkat (on/off)\n  toggleDevice(deviceId: string): Device | null {\n    const deviceIndex = this.devices.findIndex(d => d.id === deviceId);\n    if (deviceIndex === -1) return null;\n\n    this.devices[deviceIndex] = {\n      ...this.devices[deviceIndex],\n      status: this.devices[deviceIndex].status === 'on' ? 'off' : 'on',\n      lastUpdated: new Date(),\n    };\n\n    return this.devices[deviceIndex];\n  }\n\n  // Mendapatkan data sensor\n  getSensorData(): SensorData {\n    // Simulasi perubahan suhu secara random\n    this.currentTemperature += (Math.random() - 0.5) * 0.5;\n    this.currentTemperature = Math.max(20, Math.min(35, this.currentTemperature));\n\n    // Simulasi deteksi gerakan secara random\n    this.motionDetected = Math.random() > 0.7;\n\n    return {\n      temperature: Math.round(this.currentTemperature * 10) / 10,\n      motionDetected: this.motionDetected,\n      timestamp: new Date(),\n    };\n  }\n\n  // Mengatur suhu AC berdasarkan suhu lingkungan\n  setACTemperature(deviceId: string, temperature: number): boolean {\n    const device = this.devices.find(d => d.id === deviceId && d.type === 'ac');\n    if (!device) return false;\n\n    // Simulasi pengaturan suhu AC\n    console.log(`AC ${device.name} diatur ke suhu ${temperature}Â°C`);\n    return true;\n  }\n\n  // Auto-off perangkat jika tidak ada gerakan\n  autoOffDevices(delayMinutes: number): void {\n    if (!this.motionDetected) {\n      setTimeout(() => {\n        this.devices.forEach((device, index) => {\n          if (device.status === 'on') {\n            this.devices[index] = {\n              ...device,\n              status: 'off',\n              lastUpdated: new Date(),\n            };\n          }\n        });\n      }, delayMinutes * 60 * 1000); // Convert menit ke milidetik\n    }\n  }\n}\n\n// Instance global simulator\nexport const deviceSimulator = new DeviceSimulator();\n"],"names":[],"mappings":";;;;AAGO,MAAM;IACH,UAAoB;QAC1B;YACE,IAAI;YACJ,MAAM;YACN,MAAM;YACN,QAAQ;YACR,MAAM;YACN,aAAa,IAAI;QACnB;QACA;YACE,IAAI;YACJ,MAAM;YACN,MAAM;YACN,QAAQ;YACR,MAAM;YACN,aAAa,IAAI;QACnB;QACA;YACE,IAAI;YACJ,MAAM;YACN,MAAM;YACN,QAAQ;YACR,MAAM;YACN,aAAa,IAAI;QACnB;QACA;YACE,IAAI;YACJ,MAAM;YACN,MAAM;YACN,QAAQ;YACR,MAAM;YACN,aAAa,IAAI;QACnB;KACD,CAAC;IAEM,qBAAqB,GAAG;IACxB,iBAAiB,MAAM;IAE/B,8BAA8B;IAC9B,aAAuB;QACrB,OAAO;eAAI,IAAI,CAAC,OAAO;SAAC;IAC1B;IAEA,gCAAgC;IAChC,aAAa,QAAgB,EAAiB;QAC5C,MAAM,cAAc,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QACzD,IAAI,gBAAgB,CAAC,GAAG,OAAO;QAE/B,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG;YAC1B,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY;YAC5B,QAAQ,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,KAAK,OAAO,QAAQ;YAC5D,aAAa,IAAI;QACnB;QAEA,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY;IAClC;IAEA,0BAA0B;IAC1B,gBAA4B;QAC1B,wCAAwC;QACxC,IAAI,CAAC,kBAAkB,IAAI,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI;QACnD,IAAI,CAAC,kBAAkB,GAAG,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,kBAAkB;QAE3E,yCAAyC;QACzC,IAAI,CAAC,cAAc,GAAG,KAAK,MAAM,KAAK;QAEtC,OAAO;YACL,aAAa,KAAK,KAAK,CAAC,IAAI,CAAC,kBAAkB,GAAG,MAAM;YACxD,gBAAgB,IAAI,CAAC,cAAc;YACnC,WAAW,IAAI;QACjB;IACF;IAEA,+CAA+C;IAC/C,iBAAiB,QAAgB,EAAE,WAAmB,EAAW;QAC/D,MAAM,SAAS,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,YAAY,EAAE,IAAI,KAAK;QACtE,IAAI,CAAC,QAAQ,OAAO;QAEpB,8BAA8B;QAC9B,QAAQ,GAAG,CAAC,CAAC,GAAG,EAAE,OAAO,IAAI,CAAC,gBAAgB,EAAE,YAAY,EAAE,CAAC;QAC/D,OAAO;IACT;IAEA,4CAA4C;IAC5C,eAAe,YAAoB,EAAQ;QACzC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACxB,WAAW;gBACT,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ;oBAC5B,IAAI,OAAO,MAAM,KAAK,MAAM;wBAC1B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG;4BACpB,GAAG,MAAM;4BACT,QAAQ;4BACR,aAAa,IAAI;wBACnB;oBACF;gBACF;YACF,GAAG,eAAe,KAAK,OAAO,6BAA6B;QAC7D;IACF;AACF;AAGO,MAAM,kBAAkB,IAAI","debugId":null}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/contexts/DeviceContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { Device, SensorData, SystemSettings } from '@/types';\nimport { deviceSimulator } from '@/lib/deviceSimulator';\nimport { DEFAULT_SETTINGS } from '@/lib/constants';\n\ninterface DeviceContextType {\n  devices: Device[];\n  sensorData: SensorData;\n  settings: SystemSettings;\n  toggleDevice: (deviceId: string) => void;\n  updateSettings: (newSettings: Partial<SystemSettings>) => void;\n  refreshSensorData: () => void;\n}\n\nconst DeviceContext = createContext<DeviceContextType | undefined>(undefined);\n\nexport function DeviceProvider({ children }: { children: React.ReactNode }) {\n  const [devices, setDevices] = useState<Device[]>([]);\n  const [sensorData, setSensorData] = useState<SensorData>({\n    temperature: 28,\n    motionDetected: false,\n    timestamp: new Date(),\n  });\n  const [settings, setSettings] = useState<SystemSettings>(DEFAULT_SETTINGS);\n\n  // Load data awal saat komponen dimuat\n  useEffect(() => {\n    setDevices(deviceSimulator.getDevices());\n    refreshSensorData();\n\n    // Update sensor data setiap 5 detik\n    const interval = setInterval(() => {\n      refreshSensorData();\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Fungsi untuk toggle perangkat (on/off)\n  const toggleDevice = (deviceId: string) => {\n    const updatedDevice = deviceSimulator.toggleDevice(deviceId);\n    if (updatedDevice) {\n      setDevices(deviceSimulator.getDevices());\n    }\n  };\n\n  // Fungsi untuk update pengaturan sistem\n  const updateSettings = (newSettings: Partial<SystemSettings>) => {\n    setSettings(prev => ({ ...prev, ...newSettings }));\n    // Simpan ke localStorage\n    localStorage.setItem('ruang-cerdas-settings', JSON.stringify({ ...settings, ...newSettings }));\n  };\n\n  // Fungsi untuk refresh data sensor\n  const refreshSensorData = () => {\n    const newSensorData = deviceSimulator.getSensorData();\n    setSensorData(newSensorData);\n\n    // Auto-off perangkat jika tidak ada gerakan dan fitur diaktifkan\n    if (settings.motionSensorEnabled && !newSensorData.motionDetected) {\n      deviceSimulator.autoOffDevices(settings.autoOffDelay);\n    }\n\n    // Auto-adjust AC temperature berdasarkan suhu lingkungan\n    if (settings.temperatureSettings.autoMode) {\n      const mapping = settings.temperatureSettings.temperatureMapping.find(\n        m => Math.abs(m.environmentTemp - newSensorData.temperature) <= 1\n      );\n      \n      if (mapping) {\n        devices.forEach(device => {\n          if (device.type === 'ac' && device.status === 'on') {\n            deviceSimulator.setACTemperature(device.id, mapping.acTemp);\n          }\n        });\n      }\n    }\n  };\n\n  // Load pengaturan dari localStorage saat aplikasi dimuat\n  useEffect(() => {\n    const savedSettings = localStorage.getItem('ruang-cerdas-settings');\n    if (savedSettings) {\n      setSettings(JSON.parse(savedSettings));\n    }\n  }, []);\n\n  return (\n    <DeviceContext.Provider value={{\n      devices,\n      sensorData,\n      settings,\n      toggleDevice,\n      updateSettings,\n      refreshSensorData,\n    }}>\n      {children}\n    </DeviceContext.Provider>\n  );\n}\n\nexport function useDevice() {\n  const context = useContext(DeviceContext);\n  if (context === undefined) {\n    throw new Error('useDevice must be used within a DeviceProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":";;;;;AAEA;AAEA;AACA;AALA;;;;;AAgBA,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAiC;AAE5D,SAAS,eAAe,EAAE,QAAQ,EAAiC;IACxE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACnD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc;QACvD,aAAa;QACb,gBAAgB;QAChB,WAAW,IAAI;IACjB;IACA,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB,uHAAA,CAAA,mBAAgB;IAEzE,sCAAsC;IACtC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW,6HAAA,CAAA,kBAAe,CAAC,UAAU;QACrC;QAEA,oCAAoC;QACpC,MAAM,WAAW,YAAY;YAC3B;QACF,GAAG;QAEH,OAAO,IAAM,cAAc;IAC7B,GAAG,EAAE;IAEL,yCAAyC;IACzC,MAAM,eAAe,CAAC;QACpB,MAAM,gBAAgB,6HAAA,CAAA,kBAAe,CAAC,YAAY,CAAC;QACnD,IAAI,eAAe;YACjB,WAAW,6HAAA,CAAA,kBAAe,CAAC,UAAU;QACvC;IACF;IAEA,wCAAwC;IACxC,MAAM,iBAAiB,CAAC;QACtB,YAAY,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,GAAG,WAAW;YAAC,CAAC;QAChD,yBAAyB;QACzB,aAAa,OAAO,CAAC,yBAAyB,KAAK,SAAS,CAAC;YAAE,GAAG,QAAQ;YAAE,GAAG,WAAW;QAAC;IAC7F;IAEA,mCAAmC;IACnC,MAAM,oBAAoB;QACxB,MAAM,gBAAgB,6HAAA,CAAA,kBAAe,CAAC,aAAa;QACnD,cAAc;QAEd,iEAAiE;QACjE,IAAI,SAAS,mBAAmB,IAAI,CAAC,cAAc,cAAc,EAAE;YACjE,6HAAA,CAAA,kBAAe,CAAC,cAAc,CAAC,SAAS,YAAY;QACtD;QAEA,yDAAyD;QACzD,IAAI,SAAS,mBAAmB,CAAC,QAAQ,EAAE;YACzC,MAAM,UAAU,SAAS,mBAAmB,CAAC,kBAAkB,CAAC,IAAI,CAClE,CAAA,IAAK,KAAK,GAAG,CAAC,EAAE,eAAe,GAAG,cAAc,WAAW,KAAK;YAGlE,IAAI,SAAS;gBACX,QAAQ,OAAO,CAAC,CAAA;oBACd,IAAI,OAAO,IAAI,KAAK,QAAQ,OAAO,MAAM,KAAK,MAAM;wBAClD,6HAAA,CAAA,kBAAe,CAAC,gBAAgB,CAAC,OAAO,EAAE,EAAE,QAAQ,MAAM;oBAC5D;gBACF;YACF;QACF;IACF;IAEA,yDAAyD;IACzD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,gBAAgB,aAAa,OAAO,CAAC;QAC3C,IAAI,eAAe;YACjB,YAAY,KAAK,KAAK,CAAC;QACzB;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC,cAAc,QAAQ;QAAC,OAAO;YAC7B;YACA;YACA;YACA;YACA;YACA;QACF;kBACG;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}}]
}